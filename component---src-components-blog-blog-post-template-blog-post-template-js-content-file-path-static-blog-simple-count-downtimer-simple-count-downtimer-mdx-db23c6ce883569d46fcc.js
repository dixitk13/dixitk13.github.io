"use strict";(self.webpackChunkdixitk13_github_io=self.webpackChunkdixitk13_github_io||[]).push([[704],{3124:function(n,s,a){a.r(s),a.d(s,{default:function(){return d}});var t=a(8453),p=a(6540);function e(n){const s=Object.assign({p:"p",span:"span",img:"img",a:"a"},(0,t.RP)(),n.components);return p.createElement(p.Fragment,null,p.createElement(s.p,null,"I was recently trying to make a simple countdown timer which counts from a specific time-interval and “finishes” itself."),"\n",p.createElement(s.p,null,"I just found it amazing that a few lines of code could bring in such a thing!\nthe code just uses a state called “minutes” which gets initialized with the total number of seconds for which the timer stays."),"\n",p.createElement(s.p,null,"The component accepts minutes till which it must stay alive, converts that into seconds, runs the countdown and then clears the internal logic."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Timer</span></span> <span class="token attr-name">classNames</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>time-text<span class="token punctuation">"</span></span> <span class="token attr-name">minutes</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"And here’s the entire code."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Fragment<span class="token punctuation">,</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Timer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> minutes<span class="token punctuation">,</span> classNames <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>minutes<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>seconds<span class="token punctuation">,</span> setSeconds<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>minutes <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> timeout <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setSeconds</span><span class="token punctuation">(</span>seconds <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>seconds <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">clearInterval</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>seconds<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> showMins <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>seconds <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> showSeconds <span class="token operator">=</span> seconds <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">PadString</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> number <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">String</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span>showMins <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>showSeconds<span class="token punctuation">)</span> <span class="token operator">||</span> showMins <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>classNames<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">Complete!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Fragment</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>classNames<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PadString</span></span> <span class="token attr-name">number</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>showMins<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PadString</span></span> <span class="token attr-name">number</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>showSeconds<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token string">" "</span><span class="token punctuation">}</span><span class="token plain-text">\n      remaining\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Fragment</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Timer<span class="token punctuation">;</span></code></pre></div>'}}),"\n",p.createElement(s.img,{src:"/blog/simple-count-downtimer/count-down-timer.gif",alt:"count-down-timer"}),"\n",p.createElement(s.p,null,"And below’s a codepen link:"),"\n",p.createElement(s.p,null,p.createElement(s.a,{href:"https://codepen.io/dixitk13/pen/WNQPKye",rel:"nofollow noopener noreferrer external"},"https://codepen.io/dixitk13/pen/WNQPKye")))}var o=function(n){void 0===n&&(n={});const{wrapper:s}=Object.assign({},(0,t.RP)(),n.components);return s?p.createElement(s,n,p.createElement(e,n)):e(n)},c=a(7581),l=a(7091),u=a(2003),i=a(5443),k=a(5147),r=a(5048);function m(n){let{data:s,children:a,pageContext:e}=n;if(!e)return null;const{frontmatter:o,excerpt:c,timeToReadInWords:i}=null!=e?e:{},{title:k,date:m}=null!=o?o:{};return p.createElement(l.Cc,null,p.createElement(r.T,{title:k,description:c||"nothin",article:!0}),p.createElement(l.IF,null,p.createElement(g,null,p.createElement(f,null,k),p.createElement("p",null,"Last updated: ",m," •"," ",i&&p.createElement("span",null,i))),p.createElement(t.xA,{components:u.ol},a)))}function d(n){return p.createElement(m,n,p.createElement(o,n))}const g=c.default.div.attrs({tabIndex:0}).withConfig({displayName:"BlogPostTemplate__BlogHeader",componentId:"sc-aqkyp8-0"})(["padding:"," 0 0 0;width:100%;text-align:center;p{opacity:0.8;font-size:",';&:after{content:"";margin:'," auto;display:block;width:200px;height:2px;border-radius:50%;background-color:",";opacity:0.4;}}"],(0,i.di)(1),(0,i.di)(.75),(0,i.di)(1),k.T8),f=c.default.h1.withConfig({displayName:"BlogPostTemplate__BlogTitle",componentId:"sc-aqkyp8-1"})(["color:",';font-weight:900;font-size:40px;font-family:"Futura PT",-apple-system,sans-serif;'],k.T8)},8453:function(n,s,a){a.d(s,{RP:function(){return e},xA:function(){return c}});var t=a(6540);const p=t.createContext({});function e(n){const s=t.useContext(p);return t.useMemo((()=>"function"==typeof n?n(s):{...s,...n}),[s,n])}const o={};function c({components:n,children:s,disableParentContext:a}){let c;return c=a?"function"==typeof n?n({}):n||o:e(n),t.createElement(p.Provider,{value:c},s)}}}]);
//# sourceMappingURL=component---src-components-blog-blog-post-template-blog-post-template-js-content-file-path-static-blog-simple-count-downtimer-simple-count-downtimer-mdx-db23c6ce883569d46fcc.js.map