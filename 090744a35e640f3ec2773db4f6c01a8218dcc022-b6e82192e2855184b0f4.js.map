{"version":3,"file":"090744a35e640f3ec2773db4f6c01a8218dcc022-b6e82192e2855184b0f4.js","mappings":"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","sources":["webpack://dixitk13.github.io/./node_modules/lodash/kebabCase.js","webpack://dixitk13.github.io/./src/components/Blog/BlogPostTemplate/BlogPostTemplate.js","webpack://dixitk13.github.io/./src/components/Blog/BlogPosts/BlogPostsView.js","webpack://dixitk13.github.io/./src/components/Blog/BlogPosts/BlogPosts.js","webpack://dixitk13.github.io/./node_modules/lodash/deburr.js","webpack://dixitk13.github.io/./node_modules/lodash/_asciiWords.js","webpack://dixitk13.github.io/./node_modules/lodash/_unicodeWords.js","webpack://dixitk13.github.io/./node_modules/lodash/_basePropertyOf.js","webpack://dixitk13.github.io/./node_modules/lodash/_deburrLetter.js","webpack://dixitk13.github.io/./node_modules/lodash/_hasUnicodeWord.js","webpack://dixitk13.github.io/./node_modules/lodash/_createCompounder.js","webpack://dixitk13.github.io/./node_modules/lodash/words.js","webpack://dixitk13.github.io/./src/components/Tags/TagList.js","webpack://dixitk13.github.io/./src/components/Tags/TagDetail.js"],"sourcesContent":["var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport styled from \"styled-components\";\nimport { MDXProvider } from \"@mdx-js/react\";\n\nimport { BlogWrapper, BlogMain } from \"../common\";\nimport { mdxComponents } from \"../../../common\";\nimport { rhythm } from \"../../../utils\";\nimport { fontColor } from \"../../../styles\";\nimport { SEOComponent } from \"../../SEO\";\n\nexport default function BlogPostTemplate({ data, children, pageContext }) {\n  if (!pageContext) return null;\n\n  const { frontmatter, excerpt, timeToReadInWords } = pageContext ?? {};\n  const { title, date } = frontmatter ?? {};\n  return (\n    <BlogWrapper>\n      <SEOComponent title={title} description={excerpt || \"nothin\"} article />\n      <BlogMain>\n        <BlogHeader>\n          <BlogTitle>{title}</BlogTitle>\n          <p>\n            Last updated: {date} •{\" \"}\n            {timeToReadInWords && <span>{timeToReadInWords}</span>}\n          </p>\n        </BlogHeader>\n        <MDXProvider components={mdxComponents}>{children}</MDXProvider>\n      </BlogMain>\n    </BlogWrapper>\n  );\n}\n\nconst BlogHeader = styled.div.attrs({\n  tabIndex: 0,\n})`\n  padding: ${rhythm(1)} 0 0 0;\n  width: 100%;\n  text-align: center;\n\n  p {\n    opacity: 0.8;\n    font-size: ${rhythm(0.75)};\n    &:after {\n      content: \"\";\n      margin: ${rhythm(1)} auto;\n      display: block;\n      width: 200px;\n      height: 2px;\n      border-radius: 50%;\n      background-color: ${fontColor};\n      opacity: 0.4;\n    }\n  }\n`;\n\nconst BlogTitle = styled.h1`\n  color: ${fontColor};\n  font-weight: 900;\n  font-size: 40px;\n  font-family:\n    \"Futura PT\",\n    -apple-system,\n    sans-serif;\n`;\n\n// const BlogBody = styled.article.attrs({\n//   tabIndex: 0,\n// })`\n//   font-size: ${rhythm(0.75)};\n//   width: 100%;\n//   p {\n//     /* display: flex; */\n//     img {\n//       margin: 0 auto;\n//     }\n//   }\n//   a {\n//     color: ${fontColor};\n//   }\n//   code {\n//     font-size: ${rhythm(0.75)};\n//   }\n//   pre {\n//     background: #282c34;\n//     border-radius: 6px;\n//     color: #abb2bf;\n//     overflow: auto;\n//     padding: 14px 18px;\n//     line-height: 1.6;\n//   }\n// `;\n\nexport const query = graphql`\n  query blogPostByPath($path: String!) {\n    mdx(frontmatter: { path: { eq: $path } }) {\n      timeToReadInWords\n      frontmatter {\n        title\n        type\n        date(formatString: \"MMM DD, YYYY\")\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nimport { BlogHeader, BlogMain } from \"../common\";\nimport { device } from \"../../../utils\";\nimport { fontColor, fontHover } from \"../../../styles\";\n\n// const Blogs = styled.main``;\n\nconst BlogItemArticle = styled.article`\n  font-size: 30px;\n  padding: 20px;\n  border-radius: 3px;\n  transition: all 0.3s ease;\n  cursor: pointer;\n  width: 100%;\n  &:hover {\n    transform: translateY(-2px);\n  }\n  &:active {\n    transform: translateZ(-12px);\n  }\n  p {\n    font-size: 18px;\n  }\n`;\n\nconst PostHeading = styled(BlogHeader)`\n  margin: 20px 0 10px 0;\n  display: flex;\n  justify-content: space-between;\n\n  a {\n    margin: 0;\n    padding: 0;\n    font-weight: 900;\n    font-size: 40px;\n    color: ${fontColor};\n    text-decoration: none;\n    font-family:\n      \"Futura PT\",\n      -apple-system,\n      sans-serif;\n    &:hover {\n      color: ${fontHover};\n      cursor: pointer;\n    }\n  }\n  p {\n    margin: 0;\n  }\n\n  small {\n    font-size: 18px;\n  }\n\n  @media ${device.mobile} {\n    min-height: unset;\n    a {\n      font-weight: 900;\n      font-size: 27px;\n    }\n  }\n`;\nexport const BlogPostsView = ({ blogs }) => {\n  if (!blogs) return null;\n\n  return (\n    <BlogMain>\n      {blogs &&\n        blogs.map(({ node }, index) => {\n          const { frontmatter, excerpt, id } = node;\n          return (\n            <BlogItem\n              id={id}\n              key={`blog-item-${index}`}\n              date={frontmatter.date}\n              excerpt={excerpt}\n              title={frontmatter.title}\n              path={frontmatter.path}\n            />\n          );\n        })}\n    </BlogMain>\n  );\n};\n\nexport const BlogItem = ({ id, path, title, date, excerpt }) => {\n  return (\n    <BlogItemArticle key={`small-blog-item-${id}`}>\n      <PostHeading as=\"header\">\n        <Link to={`${path}`}>{title}</Link>\n        <p>{date}</p>\n      </PostHeading>\n      {excerpt && <p>{excerpt}</p>}\n    </BlogItemArticle>\n  );\n};\n","import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nimport { BlogPostsView } from \"./BlogPostsView\";\n\nexport const getAllBlogs = graphql`\n  query getAllBlogs {\n    blogs: allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { type: { eq: \"blog\" } } }\n    ) {\n      edges {\n        node {\n          id\n          body\n          excerpt(pruneLength: 150)\n          frontmatter {\n            path\n            type\n            date(formatString: \"MMM DD, YYYY\")\n            title\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\nexport const BlogPosts = () => {\n  return (\n    <StaticQuery\n      query={getAllBlogs}\n      render={({ blogs }) => {\n        return <BlogPostsView blogs={blogs.edges} />;\n      }}\n    />\n  );\n};\n","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n","var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","import React from \"react\";\nimport { kebabCase } from \"lodash\";\nimport { Link } from \"gatsby\";\nimport styled, { css } from \"styled-components\";\n\nimport { rhythm, device } from \"../../utils\";\nimport { BlogMain } from \"../Blog\";\nimport { Icons } from \"../../../static/svg\";\nimport { Emojis } from \"../../../static/svg/emojis\";\n\nimport { background, fontColor } from \"../../styles\";\n\nconst boxDim = \"150px\";\nconst mobileBoxDim = \"130px\";\n\nconst TagsUnorderedList = styled.ul`\n  margin: ${rhythm(2)} 20px 0 20px;\n  list-style: none;\n  display: grid;\n  grid-gap: ${rhythm(0.5)};\n\n  @media ${device.smallLaptop} {\n    grid-template-columns: repeat(2, ${boxDim});\n  }\n  @media ${device.desktop} {\n    grid-template-columns: repeat(3, ${boxDim});\n  }\n  @media ${device.screen4k} {\n    grid-template-columns: repeat(4, ${boxDim});\n  }\n  @media ${device.mobile} {\n    margin: ${rhythm(2)} 0 0 0;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n  @media ${device.tablet} {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n`;\n\nconst TagImage = styled.span`\n  transition: all 0.3s;\n\n  ${({ minimal }) =>\n    !minimal &&\n    css`\n      transform: rotate(-45deg);\n    `}\n\n  margin-bottom: 0;\n`;\n\nconst EmojiImage = styled(TagImage)`\n  font-size: 45px;\n`;\n\nconst StyledListItem = styled.li`\n  margin: 0;\n  height: ${boxDim};\n  width: ${boxDim};\n  border-radius: 5px;\n  position: relative;\n  transition: all 0.3s;\n  list-style: none;\n  &:hover {\n    transform: translateY(-2px);\n  }\n  &:active {\n    transform: translateZ(-12px);\n  }\n  @media ${device.mobile}, ${device.tablet} {\n    height: ${mobileBoxDim};\n    width: ${mobileBoxDim};\n    margin: 6px;\n  }\n\n  a {\n    background: ${background};\n    color: ${fontColor};\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    height: 100%;\n    width: 100%;\n    font-size: 15px;\n    padding: ${rhythm(0.5)} ${rhythm(0.5)} ${rhythm(0.25)} ${rhythm(0.5)};\n    border-radius: 3px;\n    text-decoration: none;\n    text-align: center;\n    &:hover {\n      ${TagImage} {\n        transform: unset;\n      }\n    }\n  }\n`;\n\nconst TagsListContainer = styled(BlogMain)`\n  align-items: flex-start;\n  @media ${device.mobile} {\n    align-items: center;\n  }\n`;\n\nconst NumCount = styled.span`\n  position: absolute;\n  transform: rotate(0deg);\n  height: 27px;\n  width: 33px;\n  border-radius: 3px 3px 3px 9px;\n  background: rgb(217, 68, 73);\n  text-align: center;\n  margin: 0 auto;\n  color: #fff;\n  top: 0;\n  right: 0;\n`;\n\nconst Text = styled.div`\n  width: 100%;\n  align-self: flex-end;\n`;\n\nexport const TagList = ({ group }) => {\n  return (\n    <TagsListContainer>\n      <TagsUnorderedList>\n        {group.map((tag, index) => (\n          <TagListItem\n            tagValue={tag.fieldValue}\n            count={tag.totalCount}\n            key={`${tag.fieldValue}-${index}`}\n          />\n        ))}\n      </TagsUnorderedList>\n    </TagsListContainer>\n  );\n};\n\nexport const TagListItem = ({ tagValue, count, minimal }) => {\n  if (minimal) {\n    return <Image minimal={minimal} tagValue={tagValue} />;\n  }\n  return (\n    <StyledListItem>\n      <Link to={`/tags/${kebabCase(tagValue)}/`}>\n        <Image tagValue={tagValue} />\n        <Text>{tagValue}</Text>\n      </Link>\n      <NumCount>{count}</NumCount>\n    </StyledListItem>\n  );\n};\n\nconst Image = ({ tagValue, minimal }) => {\n  if (Emojis[tagValue]) {\n    return (\n      <EmojiImage minimal={minimal} as=\"div\">\n        {Emojis[tagValue]}\n      </EmojiImage>\n    );\n  }\n\n  return (\n    <TagImage\n      as=\"img\"\n      width=\"55px\"\n      height=\"55px\"\n      minimal={minimal}\n      src={Icons[tagValue]}\n      alt={tagValue}\n    />\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { graphql } from \"gatsby\";\n\nimport { BlogWrapper, BlogItem, NavLink, BlogMain } from \"../Blog\";\nimport { TagListItem } from \"../Tags\";\nimport { rhythm } from \"../../utils\";\nimport { Emojis } from \"../../../static/svg/emojis\";\n\nconst TagDetailMainContainer = styled(BlogMain)`\n  justify-content: flex-start;\n  align-items: center;\n  margin: ${rhythm(2)} 0 0 0;\n`;\n\nconst AllTagsLink = styled(NavLink)`\n  margin-top: auto;\n  span {\n    margin-left: 6px;\n  }\n`;\n\nexport default function TagDetail({ pageContext, data }) {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMdx;\n\n  return (\n    <BlogWrapper>\n      <TagDetailMainContainer>\n        <TagListItem minimal count={totalCount} tagValue={tag} />\n        {edges.map(({ node }, index) => {\n          const { frontmatter, excerpt } = node;\n          const { title, path, date, id } = frontmatter;\n          return (\n            <BlogItem\n              key={`tag-blog-item-${index}`}\n              id={id}\n              path={path}\n              date={date}\n              excerpt={excerpt}\n              title={title}\n            />\n          );\n        })}\n        <AllTagsLink to=\"/tags\">\n          {Emojis[\"back\"]}\n          <span>All tags</span>\n        </AllTagsLink>\n      </TagDetailMainContainer>\n    </BlogWrapper>\n  );\n}\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMdx(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tags: { in: [$tag] }, type: { eq: \"blog\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            tags\n            link\n            path\n            date(formatString: \"MMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["kebabCase","createCompounder","result","word","index","toLowerCase","module","exports","styled","div","attrs","tabIndex","withConfig","displayName","componentId","rhythm","fontColor","h1","BlogItemArticle","article","PostHeading","BlogHeader","fontHover","device","mobile","BlogPostsView","_ref","blogs","React","BlogMain","map","_ref2","node","frontmatter","excerpt","id","BlogItem","key","date","title","path","_ref3","as","Link","to","BlogPosts","StaticQuery","query","render","edges","deburrLetter","toString","reLatin","reComboMark","RegExp","string","replace","reAsciiWord","match","rsAstralRange","rsDingbatRange","rsLowerRange","rsUpperRange","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsModifier","rsOptVar","rsSeq","join","rsEmoji","reUnicodeWord","object","undefined","basePropertyOf","reHasUnicodeWord","test","arrayReduce","deburr","words","reApos","callback","asciiWords","hasUnicodeWord","unicodeWords","pattern","guard","boxDim","mobileBoxDim","TagsUnorderedList","ul","smallLaptop","desktop","screen4k","tablet","TagImage","span","minimal","css","EmojiImage","StyledListItem","li","background","TagsListContainer","NumCount","Text","TagList","group","tag","TagListItem","tagValue","fieldValue","count","totalCount","Image","_kebabCase","_ref4","Emojis","width","height","src","Icons","alt","TagDetailMainContainer","AllTagsLink","NavLink","TagDetail","pageContext","data","allMdx","BlogWrapper"],"sourceRoot":""}